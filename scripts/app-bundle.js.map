{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/services/horizon.js","/Users/dustin/src/p/hztest/chat/src/app.html","app.css"],"names":["App","horizonService","chat","messages","newMessage","avatar_url","Date","getMilliseconds","attached","connect","then","horizon","order","limit","watch","subscribe","items","addMessage","text","trim","console","debug","removeAllMessages","store","datetime","url","sure","confirm","item","remove","onKeyPress","event","key","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","HorizonService","status","Horizon","host","resolve","reject","onReady"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {HorizonService} from 'resources/services/horizon';\n\n\n@inject(HorizonService)\nexport class App {\n  constructor(horizonService) {\n    this.horizonService = horizonService;\n    this.chat = null;\n    this.messages = [];\n    this.newMessage = '';\n    this.avatar_url = `http://api.adorable.io/avatars/50/${new Date().getMilliseconds()}.png`;\n  }\n\n  attached() {\n    this.horizonService.connect().then(() => {\n      this.chat = this.horizonService.horizon('messages');\n      this.chat.order('datetime', 'descending').limit(8).watch().subscribe(items => {\n        this.items = items;\n        this.messages = items;\n      });\n    });\n  }\n\n  addMessage() {\n    var text = this.newMessage.trim();\n    console.debug('text', this.newMessage);\n    if (text === 'delete all') {\n      this.removeAllMessages();\n      this.newMessage = '';\n      return null;\n    }\n    if (text) {\n      this.chat.store({\n        text: text,\n        datetime: new Date(),\n        url: this.avatar_url\n      }).subscribe();\n      this.newMessage = '';\n    }\n  }\n\n  removeAllMessages() {\n    var sure = confirm('Are you sure you want to delete all visible messages?');\n    if (sure) {\n      for (let item of this.items) {\n        this.chat.remove(item);\n      }\n    }\n  }\n\n  onKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.addMessage();\n    }\n    return true;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class HorizonService {\n    constructor() {\n        this.horizon = null;\n        this.status = {};\n    }\n\n    connect() {\n        this.horizon = Horizon({host: 'localhost:8181'});\n        return new Promise((resolve, reject) => {\n            this.horizon.onReady(status => {\n                this.status = status;\n                resolve(status);\n            });\n            this.horizon.connect();\n        });\n    }\n}",null,"/* always present */\n.expand-transition {\n  transition: all .2s ease;\n  height: 30px;\n  padding: 10px;\n  background-color: #eee;\n  overflow: hidden;\n}\n\n/* .expand-enter defines the starting state for entering */\n/* .expand-leave defines the ending state for leaving */\n.expand-enter, .expand-leave {\n  height: 0;\n  padding: 0 10px;\n  opacity: 0;\n}\n\n#app ul {\n  list-style-type: none;\n}\n\n.message {\n  height: 50px;\n}\n\n.message img {\n  vertical-align:middle;\n}\n\n.message .text {\n  vertical-align:middle;\n  margin-left:5px;\n  font-family: 'Source Code Pro', \"Raleway\", \"Helvetica Neue\";\n  font-size:20px;\n}\n\n.message .datetime {\n  color:darkgrey;\n}\n\n#input {\n  margin-bottom:10%;\n}\n\n#input input {\n  position: fixed;\n  top: 80%;\n  width: 80%;\n  height:100px;\n  font-size:5rem;\n  padding:10px;\n  font-family: 'Source Code Pro', \"Raleway\", \"Helvetica Neue\";\n}"],"sourceRoot":"../src"}